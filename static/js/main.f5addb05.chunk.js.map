{"version":3,"sources":["context/Actions.types.js","context/Bucket/BucketContext.js","context/HighlightContext.js","components/Card.js","components/AddHighlight.js","context/Bucket/Actions.types.js","components/AddBucket.js","components/AddFilterNav.js","context/Bucket/reducer.js","context/reducers.js","App.js","index.js"],"names":["ADD_HIGHLIGHT","DELETE_HIGHLIGHT","UPDATE_HIGHLIGHT","BucketContext","createContext","HighlightContext","Card","highlight","dispatch","useContext","useState","bucketName","setBucketName","buckets","useDisclosure","isOpen","onOpen","onClose","console","log","useEffect","bid","filter","b","id","FindBucketName","bucketId","fontFamily","bg","minH","minW","p","m","direction","align","justify","d","maxW","flexDir","justifyContent","alignItems","colorScheme","bucket","fontSize","mt","content","color","user_name","mr","size","variant","onClick","type","payload","initialValues","bucket_id","onSubmit","values","actions","newHighlight","newContent","newUser","setSubmitting","props","name","field","form","htmlFor","placeholder","map","value","errors","isInvalid","touched","leftIcon","Add","isLoading","isSubmitting","defaultProps","tag","AddHighlight","highlights","validateContent","error","validateUserName","localStorage","setItem","JSON","stringify","nanoid","hilight","push","validate","ADD_BUCKET","AddBucket","dispatchBucket","ml","AddFilterNav","borderRadius","h","mx","fontWeight","as","Button","rightIcon","ChevronDown","dir","state","action","elem","hi","App","initialHighlight","setinitialHighlight","initialBucket","setinitialBucket","useReducer","reducers","BucketReducer","parse","getItem","Provider","_hover","justifyItems","flexWrap","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5addb05.chunk.js","sourcesContent":["export const ADD_HIGHLIGHT = \"ADD_HIGHLIGHT\"\nexport const DELETE_HIGHLIGHT = \"DELETE_HIGHLIGHT\"\nexport const UPDATE_HIGHLIGHT = \"UPDATE_HIGHLIGHT\"\nexport const ADD_BUCKET = \"ADD_BUCKET\"","import { createContext } from \"react\";\n\nexport const BucketContext = createContext();","import { createContext } from \"react\";\n\nexport const HighlightContext = createContext();","import { Box, Text, Flex, Button, } from \"@chakra-ui/react\";\nimport {DELETE_HIGHLIGHT,UPDATE_HIGHLIGHT} from \"../context/Actions.types\"\nimport {AddIcon} from \"@chakra-ui/icons\"\nimport { useState,useContext,useEffect } from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  Select,\n  Textarea,\n  Input\n} from \"@chakra-ui/react\"\nimport { Formik, Field, Form } from \"formik\";\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport {BucketContext} from \"../context/Bucket/BucketContext\"\nimport {HighlightContext} from \"../context/HighlightContext\"\n// import {UPDATE_BUCKET} from \"../context/Bucket/Actions.types\"\n\nexport default function Card({ highlight }) {\n\n    const {dispatch} = useContext(HighlightContext)\n    const [bucketName,setBucketName] = useState();\n    const {buckets} = useContext(BucketContext)\n    \n    const { isOpen, onOpen, onClose } = useDisclosure()\n    console.log(buckets);\n\n    const FindBucketName = (bid) => {\n      const bucketName = buckets.filter(b => b.id === bid )\n      setBucketName(bucketName[0]);\n    }\n\n    useEffect(() => {\n      FindBucketName(highlight.bucketId)\n    },[bucketName,buckets,highlight])\n\n    const updateHighlight = (id,content,user_name,bucket_id) => {\n      dispatch({type:UPDATE_HIGHLIGHT,payload:{id:id,newContent:content,newUser:user_name,bucketId:bucket_id}})\n    }\n\n  \n    const handleDelete = (id) => {\n        dispatch({type:DELETE_HIGHLIGHT,payload:id});\n    }\n\n    console.log(bucketName);\n  return (\n    <>\n      <Flex\n        fontFamily=\"mono\"\n        bg=\"yellow.200\"\n        minH=\"18.5rem\"\n        minW=\"18.5rem\"\n        p={4}\n        m={2}\n        direction=\"column\"\n        align=\"flex-start\"\n        justify=\"space-between\"\n      >\n        <Flex direction=\"column\" align=\"flex-start\" justify=\"space-between\">\n          <Box\n            d=\"flex\"\n            maxW=\"15rem\"\n            flexDir=\"column\"\n            justifyContent=\"space-between\"\n            alignItems=\"flex-start\"\n          >\n            {bucketName && (\n              <Button colorScheme=\"blackAlpha\">{bucketName.bucket}</Button>\n            )}\n            <Text fontSize=\"md\" mt={2}>\n              {highlight.content}\n            </Text>\n          </Box>\n          <Box mt={2}>\n            <Text fontSize=\"md\" color=\"gray.600\">\n              - {highlight.user_name}\n            </Text>\n          </Box>\n        </Flex>\n        <Flex\n          mt={2}\n          minW=\"15rem\"\n          direction=\"row\"\n          align=\"flex-end\"\n          justify=\"flex-end\"\n        >\n          <Button mr={2} size=\"sm\" colorScheme=\"red\" variant=\"outline\" onClick={() => handleDelete(highlight.id)}>\n            Delete\n          </Button>\n          <Button size=\"sm\" colorScheme=\"messenger\" variant=\"outline\" onClick={onOpen}>\n            Update\n          </Button>\n          <Modal isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Update the Highlight</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Formik\n                initialValues={{ content: \"\", user_name: \"\",bucket_id:\"\" }}\n                onSubmit={(values, actions) => {\n                  const newHighlight = { ...values,id:highlight.id };\n                  // console.log(hilight);\n                  updateHighlight(newHighlight.id,newHighlight.content,newHighlight.user_name,newHighlight.bucket_id);\n                  actions.setSubmitting(false);\n                }}\n              >\n                {(props) => (\n                  <Form>\n                    <Field name=\"bucket_id\">\n                      {({ field, form }) => (\n                        <FormControl>\n                          <FormLabel htmlFor=\"bucket\">Buckets</FormLabel>\n                          <Select variant=\"filled\" placeholder=\"Bucket\" {...field}>\n                            {buckets.map((b) => {\n                                return (\n                                    <option key={b.id} value={b.id}>{b.bucket}</option>\n                                )\n                            })}\n                          </Select>\n                          <FormErrorMessage>\n                            {form.errors.content}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n                    <Field name=\"content\">\n                      {({ field, form }) => (\n                        <FormControl\n                          isInvalid={\n                            form.errors.content && form.touched.content\n                          }\n                        >\n                          <FormLabel htmlFor=\"content\">Highlight</FormLabel>\n                          <Textarea\n                            {...field}\n                            id=\"name\"\n                            placeholder=\"What's the highligh for today\"\n                          />\n                          <FormErrorMessage>\n                            {form.errors.content}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n                    <Field name=\"user_name\" >\n                      {({ field, form }) => (\n                        <FormControl\n                          isInvalid={\n                            form.errors.content && form.touched.user_name\n                          }\n                        >\n                          <FormLabel htmlFor=\"user_name\">User Name</FormLabel>\n                          <Input {...field} id=\"name\" placeholder=\"Joe Doe\" />\n                          <FormErrorMessage>\n                            {form.errors.content}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n                    <Button\n                      leftIcon={<AddIcon />}\n                      mt={4}\n                      colorScheme=\"teal\"\n                      isLoading={props.isSubmitting}\n                      type=\"submit\"\n                    >\n                      Update\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n\nCard.defaultProps = {\n  tag: \"Services\",\n  content:\n    \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using \",\n  user_name: \"Pratik Saria\",\n};\n","import {\n    Box,\n    Button,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalCloseButton,\n    ModalBody,\n    Input,\n    Textarea,\n    Select,\n  } from \"@chakra-ui/react\";\n  import {  useEffect, useContext } from \"react\";\n  import { AddIcon } from \"@chakra-ui/icons\";\n  import { nanoid } from \"nanoid\";\n  import { ADD_HIGHLIGHT } from \"../context/Actions.types\";\n  // import {ADD_HIGHLIGHT_BUCKET} from \"../context/Bucket/Actions.types\"\n  import { HighlightContext } from \"../context/HighlightContext\";\n  import {BucketContext} from \"../context/Bucket/BucketContext\"\n\n  \n  import { Formik, Field, Form } from \"formik\";\n  import {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    useDisclosure,\n  } from \"@chakra-ui/react\";\n\nexport default function AddHighlight() {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n  const { dispatch, highlights } = useContext(HighlightContext);\n  const {buckets} = useContext(BucketContext);\n\n\n  useEffect(() => {\n    localStorage.setItem(\"localhighlights\", JSON.stringify(highlights));\n  }, [highlights]);\n\n  function validateContent(value) {\n    let error;\n    if (!value) {\n      error = \"highlight is required\";\n    }\n    return error;\n  }\n\n  function validateUserName(value) {\n    let error;\n    if (!value) {\n      error = \"Your name is required\";\n    }\n    return error;\n  }\n    return (\n        <Box>\n        <Button mr={2} colorScheme=\"teal\" onClick={onOpen}>\n          Create a highlight\n        </Button> \n        <Modal isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Please Add your Highlight</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Formik\n                initialValues={{ bucketId: \"\", content: \"\", user_name: \"\" }}\n                onSubmit={(values, actions) => {\n                  const id = nanoid();\n                  const hilight = { ...values, id: id };\n                  \n                  buckets.map(b => {\n                      if(b.id === hilight.bucketId)\n                      {\n                          b.highlights.push(id);\n\n                      }\n                  })\n                //   dispatchBucket({type:ADD_HIGHLIGHT_BUCKET,payload:{id:id,bucket_id:hilight.bucketId}});\n                  dispatch({ type: ADD_HIGHLIGHT, payload: hilight });\n                  actions.setSubmitting(false);\n                }}\n              >\n                {(props) => (\n                  <Form>\n                    <Field name=\"bucketId\">\n                      {({ field, form }) => (\n                        <FormControl>\n                          <FormLabel htmlFor=\"bucket\">Buckets</FormLabel>\n                          <Select variant=\"filled\" placeholder=\"Tags\" {...field}>\n                            {buckets.map((b) => {  \n                                return (\n                                    <option key={b.id} value={b.id}>{b.bucket}</option>\n                                )\n                            })}\n                          </Select>\n                          <FormErrorMessage>\n                            {form.errors.content}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n                    <Field name=\"content\" validate={validateContent}>\n                      {({ field, form }) => (\n                        <FormControl\n                          isInvalid={\n                            form.errors.content && form.touched.content\n                          }\n                        >\n                          <FormLabel htmlFor=\"content\">Highlight</FormLabel>\n                          <Textarea\n                            {...field}\n                            id=\"name\"\n                            placeholder=\"What's the highligh for today\"\n                          />\n                          <FormErrorMessage>\n                            {form.errors.content}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n                    <Field name=\"user_name\" validate={validateUserName}>\n                      {({ field, form }) => (\n                        <FormControl\n                          isInvalid={\n                            form.errors.content && form.touched.user_name\n                          }\n                        >\n                          <FormLabel htmlFor=\"user_name\">User Name</FormLabel>\n                          <Input {...field} id=\"name\" placeholder=\"Joe Doe\" />\n                          <FormErrorMessage>\n                            {form.errors.content}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n                    <Button\n                      leftIcon={<AddIcon />}\n                      mt={4}\n                      colorScheme=\"teal\"\n                      isLoading={props.isSubmitting}\n                      type=\"submit\"\n                    >\n                      Add\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n      </Box>\n    )\n}\n","export const ADD_BUCKET = \"ADD_BUCKET\"\nexport const ADD_HIGHLIGHT_BUCKET = \"ADD_HIGHLIGHT_BUCKET\"\nexport const DELETE_BUCKET = \"DELETE_BUCKET\"\nexport const UPDATE_BUCKET = \"UPDATE_BUCKET\"","import {\n    Box,\n    Button,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalCloseButton,\n    ModalBody,\n    Input,\n  } from \"@chakra-ui/react\";\n  import { useEffect, useContext } from \"react\";\n  import { AddIcon } from \"@chakra-ui/icons\";\n  import { nanoid } from \"nanoid\";\n  import {BucketContext} from \"../context/Bucket/BucketContext\"\n  import {ADD_BUCKET} from \"../context/Bucket/Actions.types\"\n\n  \n  import { Formik, Field, Form } from \"formik\";\n  import {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    useDisclosure,\n  } from \"@chakra-ui/react\";\n\nexport default function AddBucket() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { buckets,dispatchBucket } = useContext(BucketContext);\n\n  useEffect(() => {\n    localStorage.setItem(\"buckets\", JSON.stringify(buckets));\n  }, [buckets]);\n\n  function validateContent(value) {\n    let error;\n    if (!value) {\n      error = \"highlight is required\";\n    }\n    return error;\n  }\n\n    return (\n        <Box ml={2}>\n        <Button mr={2} colorScheme=\"teal\" onClick={onOpen}>\n          Create a Bucket\n        </Button> \n        <Modal isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Create Your Bucket Name</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Formik\n                initialValues={{ bucket: \"\" }}\n                onSubmit={(values, actions) => {\n                  const id = nanoid();\n                  const bucket = { ...values, id: id,highlights:[] };\n                  console.log(bucket);\n                  dispatchBucket({ type: ADD_BUCKET, payload: bucket });\n                  actions.setSubmitting(false);\n                }}\n              >\n                {(props) => (\n                  <Form>\n                    <Field name=\"bucket\" validate={validateContent}>\n                      {({ field, form }) => (\n                        <FormControl>\n                          <FormLabel htmlFor=\"content\">Bucket Name</FormLabel>\n                          <Input\n                            {...field}\n                            id=\"bucket\"\n                            placeholder=\"Dreams\"\n                          />\n                          <FormErrorMessage>\n                            {form.errors.content}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n                    <Button\n                      leftIcon={<AddIcon />}\n                      mt={4}\n                      colorScheme=\"teal\"\n                      isLoading={props.isSubmitting}\n                      type=\"submit\"\n                    >\n                      Add\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n      </Box>\n    )\n}\n","import {\n  Box,\n  Button,\n  Text,\n  Flex,\n  Menu,\n  MenuItem,\n  MenuList,\n  MenuButton,\n} from \"@chakra-ui/react\";\nimport { useContext } from \"react\";\n\n\n// import { ADD_HIGHLIGHT } from \"../context/Actions.types\";\n// import { HighlightContext } from \"../context/HighlightContext\";\nimport {BucketContext} from \"../context/Bucket/BucketContext\"\nimport AddHighlight from \"./AddHighlight\";\nimport AddBucket from \"./AddBucket\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\n\nexport default function AddFilterNav() {\n\n \n  const {buckets} = useContext(BucketContext)\n\n  console.log(\"BUCKET FROM FILTER\",buckets);\n\n  return (\n    <Flex\n      mt={2}\n      borderRadius=\"base\"\n      align=\"center\"\n      justify=\"space-between\"\n      bg=\"red.100\"\n      h=\"7vh\"\n      fontFamily=\"mono\"\n    >\n      <Box d=\"flex\" alignItems=\"center\">\n        <Text mx={2} fontWeight=\"bold\">\n          Filter By\n        </Text>\n        <Menu>\n          <MenuButton\n            as={Button}\n            colorScheme=\"blue\"\n            rightIcon={<ChevronDownIcon />}\n          >\n            Filter\n          </MenuButton>\n          <MenuList>\n            {buckets.map((bucket) => {\n              return (\n                <MenuItem key={bucket.id}>{bucket.bucket}</MenuItem>\n              )\n            })}\n          </MenuList>\n        </Menu>\n      </Box>\n      <Box d='flex' dir=\"row\">\n      <AddHighlight />\n      <AddBucket />\n      </Box>\n    </Flex>\n  );\n}\n","import {ADD_BUCKET,DELETE_BUCKET,ADD_HIGHLIGHT_BUCKET} from \"./Actions.types\"\n\n\n\nexport default (state,action) => {\n    switch(action.type)\n    {\n        case ADD_BUCKET:\n            return [...state,action.payload]\n        case DELETE_BUCKET:\n            return state.filter(b => b.id !== action.payload)\n        case ADD_HIGHLIGHT_BUCKET:\n            return state.map(elem => {\n                if(elem.id === action.payload.bucket_id)\n                {\n                    console.log(\"ELEEMENT\",elem);\n                    // elem.highlights.push(action.payload.id);\n                }\n            })\n        default:\n            return state;\n    }\n}","import {ADD_HIGHLIGHT,DELETE_HIGHLIGHT,UPDATE_HIGHLIGHT} from \"./Actions.types\"\n\nexport default (state,action) => {\n    switch(action.type)\n    {\n        case ADD_HIGHLIGHT:\n        return [...state,action.payload]\n        case DELETE_HIGHLIGHT:\n            return state.filter(highlight => highlight.id !== action.payload)  \n        case UPDATE_HIGHLIGHT:\n            let updateHighlight = state.map(hi => {\n                if(hi.id === action.payload.id)\n                {\n                    hi.content = action.payload.newContent;\n                    hi.user_name = action.payload.newUser;\n                    hi.bucketId = action.payload.bucket_id;\n                }\n                return hi;\n            })\n            return updateHighlight;\n        default:\n            return state;\n    }\n}","import { Box, Text, Flex, Container, Button } from \"@chakra-ui/react\";\nimport { useState,useEffect } from \"react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport Card from \"./components/Card\";\nimport AddFilterNav from \"./components/AddFilterNav\";\nimport { useReducer } from \"react\";\nimport { HighlightContext } from \"./context/HighlightContext\";\nimport { BucketContext } from \"./context/Bucket/BucketContext\";\nimport BucketReducer from \"./context/Bucket/reducer\";\nimport reducers from \"./context/reducers\";\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nfunction App() {\n  // const val = JSON.parse(localStorage.getItem('localhighlights'));\n  // console.log(val);\n  // const bucket = JSON.parse(localStorage.getItem('buckets'));\n  // console.log(bucket);\n\n  const [initialHighlight,setinitialHighlight] = useState([])\n  const [initialBucket,setinitialBucket] = useState([])\n\n  const [highlights, dispatch] = useReducer(reducers, initialHighlight);\n  const [buckets, dispatchBucket] = useReducer(BucketReducer, initialBucket);\n\n  useEffect(() => {\n    if (initialBucket === []) {\n      setinitialBucket(JSON.parse(localStorage.getItem(\"buckets\")))\n    }\n    if (initialHighlight === []) {\n      setinitialHighlight(JSON.parse(localStorage.getItem(\"localhighlights\")))\n    }\n  }, []);\n\n  const handleDragEnd = (result) => {};\n\n  return (\n    <BucketContext.Provider value={{ buckets, dispatchBucket }}>\n      <HighlightContext.Provider value={{ highlights, dispatch }}>\n        <Container maxW=\"container.xl\">\n          <Flex\n            dir=\"row\"\n            align=\"center\"\n            h=\"7vh\"\n            justify=\"space-between\"\n            bg=\"teal.100\"\n            mt={2}\n            borderRadius=\"base\"\n          >\n            <Box\n              d=\"flex\"\n              ml={2}\n              flexDir=\"row\"\n              color=\"blue.500\"\n              fontFamily=\"mono\"\n              fontSize=\"2xl\"\n              _hover={{ color: \"teal.900\" }}\n            >\n              <Text>Messaging</Text>\n              <Text>\n                /Affinity Map <ChevronDownIcon />\n              </Text>\n            </Box>\n            <Box>\n              <Button mr={2} colorScheme=\"linkedin\" variant=\"outline\">\n                Group Highlights\n              </Button>\n              <Button mr={2} colorScheme=\"linkedin\">\n                Button\n              </Button>\n            </Box>\n          </Flex>\n          <AddFilterNav />\n          <Box\n            maxW=\"container.xl\"\n            d=\"flex\"\n            alignItems=\"flex-start\"\n            justifyItems=\"space-evenly\"\n            flexWrap=\"wrap\"\n            alignItems=\"flex-start\"\n          >\n            {highlights.map((highlight, index) => {\n              return <Card key={index} highlight={highlight} />;\n            })}\n          </Box>\n        </Container>\n      </HighlightContext.Provider>\n    </BucketContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n    <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}